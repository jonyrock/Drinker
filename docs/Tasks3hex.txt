*** TOODOO ***
1. Класс WhiteSpace выпадает из словаря игры.
2. По правилам за один шаг игры каждый из героев делает по своему шагу, а новый пьяница выходит из бара раз в 20 шагов игры.
3. isStopable - переводится как могущий остановиться, а не могущий остановить. Из-за этого неверного использования этого слова возможна путаница.
4. drinker.World#isTakePlace - логика 
            if (w.isStopAble() || w.isSuspendAble())
                return true;
похожа на процедуру определение пола по вторичным половым признакам. Выглядит неочевидно. Если в игре появится костер, он будет занимать место, но не будет ни Stopable, ни Suspendable.
5. Как перевести на русский isLatencySuspendAble?
6. drinker.utils.Pair#isEqual - почему не использовать стандартный equals()?
7. drinker.Tests#initWorld - проще сделать stub на OutputStream через mockito.
8. По тестам не смог разобрать, какие методы в каждом тестируются. Выглядят громоздко и запутанно.
9. Очевидно, что число объектов можно соптимизировать. 

10. Добавить в игру нищего (описание см. ниже).
11. Добавить поддержку гексагонального поля размером 15x15 (клетки - правильные шестиугольники). 
12. Нужно уметь просто запускаться как с прямоугольным, так и с гексагональным полями.
13. Использовать maven для сборки

Описание нищего.
z - обозначение на поле
B - пункт приема стеклотары

К клетке (14, 4) прилегает пункт приема стеклотары. 
Нищий выходит из пункта и начинает обходить поле в поисках пустых бутылок, 
руководствуясь какими-то разумными соображениями (придумайте свой алгоритм). 
За ход нищий может сделать один шаг на соседнюю клетку. Если на соседней клетке 
располагается бутылка, нищий подбирает ее и отправляется к пункту приема стеклотары. 
Там он сдает ее и уходит с поля на 40 шагов (пока не закончатся вырученные деньги), 
после чего процесс начинается вновь. 

*** DONE ***


*** IGNORED ***
